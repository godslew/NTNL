<metro:MetroWindow x:Class="NTNL.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:NTNL.Views"
        xmlns:vm="clr-namespace:NTNL.ViewModels"
        Title="SettingWindow" Height="367.725" Width="440.4" Background="#FF595454">

    <Window.DataContext>
        <vm:SettingWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <metro:SystemButtons HorizontalAlignment="Right" VerticalAlignment="Top"/>
        <ListView HorizontalAlignment="Left" Height="176" Margin="10,20,0,0" VerticalAlignment="Top" Width="150" Background="{x:Null}" ItemsSource="{Binding Accounts}" SelectionMode="Single" BorderBrush="Black" SelectedValue="{Binding selectedAccount}" ToolTip="Account list">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Foreground="White" Text="{Binding ScreenName}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <TextBox HorizontalAlignment="Left" Height="37" Margin="188,26,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" Background="{x:Null}" BorderBrush="#FF003ABC" Foreground="White" ToolTip="NG Word" Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <metro:CaptionButton Margin="327,68,0,0" Width="82" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Add NGWord" Command="{Binding RegisterNGWordCommand, Mode=OneWay}" IsEnabled="{Binding IsWrite}"/>
        <ListView HorizontalAlignment="Left" Height="199" Margin="188,102,0,0" VerticalAlignment="Top" Width="205" Background="{x:Null}" BorderBrush="#FF110000" ItemsSource="{Binding Privates}" ToolTip="NGWord list">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Background="{x:Null}" Foreground="White" Text="{Binding NGword}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</metro:MetroWindow>
