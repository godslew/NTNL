<metro:MetroWindow x:Class="NTNL.Views.AccountManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
        xmlns:v="clr-namespace:NTNL.Views"
        xmlns:vm="clr-namespace:NTNL.ViewModels"
        Title="AccountManagerWindow" Height="173.571" Width="311.071">

    <Window.DataContext>
        <vm:AccountManagerWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <metro:CaptionIcon HorizontalAlignment="Left" VerticalAlignment="Top" Content="AccountManager" Height="35"/>
        <metro:SystemButtons HorizontalAlignment="Right" VerticalAlignment="Top"/>
        <metro:PromptTextBox x:Name="promptTextBox" Margin="10,40,0,0" HorizontalAlignment="Left" Width="102" VerticalAlignment="Top" Prompt="PINコードを入力"/>
        <metro:CaptionButton Margin="80,70,0,0" Height="23" Content="認証" Command="{Binding OAuthCommand, Mode=OneWay}" CommandParameter="{Binding Text, ElementName=promptTextBox}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="62"/>

    </Grid>
</metro:MetroWindow>
